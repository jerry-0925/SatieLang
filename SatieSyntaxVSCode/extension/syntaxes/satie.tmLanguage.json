{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Satie",
    "scopeName": "source.satie",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#groups"
        },
        {
            "include": "#statements"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#properties"
        },
        {
            "include": "#interpolation"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#numbers"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.satie",
                    "match": "#.*$"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.satie",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.satie",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "groups": {
            "patterns": [
                {
                    "name": "meta.group.satie",
                    "match": "^\\s*(group)\\s+(\\w+)\\s*(:)",
                    "captures": {
                        "1": {
                            "name": "keyword.control.group.satie"
                        },
                        "2": {
                            "name": "entity.name.group.satie"
                        },
                        "3": {
                            "name": "punctuation.separator.colon.satie"
                        }
                    }
                },
                {
                    "name": "keyword.control.group.satie",
                    "match": "^\\s*(endgroup)\\b"
                }
            ]
        },
        "statements": {
            "patterns": [
                {
                    "name": "meta.statement.satie",
                    "match": "^\\s*(?:(\\d+)\\s*(\\*)\\s*)?(loop|oneshot)\\b",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.count.satie"
                        },
                        "2": {
                            "name": "keyword.operator.multiplication.satie"
                        },
                        "3": {
                            "name": "keyword.control.statement.satie"
                        }
                    }
                }
            ]
        },
        "properties": {
            "patterns": [
                {
                    "name": "meta.property.satie",
                    "match": "^\\s*(volume|pitch|starts_at|duration|fade_in|fade_out|every|overlap|visual|move)\\s*(=)",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.satie"
                        },
                        "2": {
                            "name": "keyword.operator.assignment.satie"
                        }
                    }
                }
            ]
        },
        "interpolation": {
            "patterns": [
                {
                    "name": "entity.name.function.interpolation.satie",
                    "match": "\\b(interpolate|goto|gobetween)\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.timing.satie",
                    "match": "\\b(every|and|as|in|for|ever)\\b"
                },
                {
                    "name": "keyword.other.movement.satie",
                    "match": "\\b(walk|fly|pos)\\b"
                },
                {
                    "name": "keyword.other.visual.satie",
                    "match": "\\b(trail|sphere|cube|cylinder|capsule|object)\\b"
                },
                {
                    "name": "entity.name.ease.satie",
                    "match": "\\b(linear|inquad|outquad|inoutquad|incubic|outcubic|inoutcubic|inquart|outquart|inoutquart|inquint|outquint|inoutquint|insine|outsine|inoutsine|inexpo|outexpo|inoutexpo|incirc|outcirc|inoutcirc|inelastic|outelastic|inoutelastic|inback|outback|inoutback|inbounce|outbounce|inoutbounce)\\b"
                },
                {
                    "name": "constant.language.boolean.satie",
                    "match": "\\b(true|false|t|f)\\b"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.range.satie",
                    "match": "-?\\d+(?:\\.\\d+)?to-?\\d+(?:\\.\\d+)?"
                },
                {
                    "name": "constant.numeric.satie",
                    "match": "-?\\d+(?:\\.\\d+)?"
                }
            ]
        }
    }
}